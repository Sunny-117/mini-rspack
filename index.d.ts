/* tslint:disable */
/* eslint-disable */

/* auto-generated by NAPI-RS */

export interface CompilerHooks {
  run: SyncHook
  emit: SyncHook
  done: SyncHook
}
export interface Stats {
  entries: Array<string>
  chunks: Array<string>
  modules: Array<string>
  files: Array<string>
  assets: Array<string>
}
export declare function createCompiler(options: RspackOptions): Compiler
export declare function runCompiler(compiler: Compiler, callback: (err: Error | null, arg: Stats) => any): void
export declare function watchCompiler(compiler: Compiler, callback: (err: Error | null, arg: Stats) => any): void
export interface Chunk {
  name: string
  entryModule: Module
  modules: Array<Module>
}
export interface Compilation {
  options: RspackOptions
  entries: Array<Chunk>
  modules: Array<Module>
  chunks: Array<Chunk>
  assets: Record<string, string>
  files: Array<string>
  hooks: CompilationHooks
}
export interface CompilationHooks {
  emit: SyncHook
}
export interface Module {
  id: string
  name: string
  dependencies: Array<Dependency>
  source: string
}
export interface Dependency {
  depModuleId: string
  depModulePath: string
}
export interface Loader {
  path: string
}
export interface SyncHook {
  name: string
  taps: Array<string>
}
export interface RspackOptions {
  mode?: string
  devtool?: boolean
  watch?: boolean
  context?: string
  entry: EntryOptions
  output: OutputOptions
  resolve?: ResolveOptions
  module?: ModuleOptions
  plugins?: Array<string>
}
export interface EntryOptions {
  entries: Record<string, string>
}
export interface OutputOptions {
  path: string
  filename: string
}
export interface ResolveOptions {
  extensions?: Array<string>
}
export interface ModuleOptions {
  rules?: Array<RuleOptions>
}
export interface RuleOptions {
  test: string
  use: Array<string>
}
export declare function rspack(options: RspackOptions): Compiler
export declare class Compiler {
  options: RspackOptions
  hooks: CompilerHooks
  run(callback: (...args: any[]) => any): void
  watch(callback: (...args: any[]) => any): void
}

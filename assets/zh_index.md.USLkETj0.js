import{_ as i,c as a,o as n,ae as t}from"./chunks/framework.osJJb4L7.js";const o=JSON.parse('{"title":"","description":"","frontmatter":{"layout":"home","hero":{"name":"mini-rspack","text":"使用 Rust 实现的简化版 webpack 打包工具","tagline":"基于 Rust 和 Node.js 的高性能 JavaScript 打包工具","image":{"src":"https://assets.rspack.dev/rspack/rspack-logo.svg","alt":"mini-rspack"},"actions":[{"theme":"brand","text":"开始使用","link":"/zh/guide/"},{"theme":"alt","text":"在 GitHub 上查看","link":"https://github.com/Sunny-117/mini-rspack"}]},"features":[{"icon":"🚀","title":"高性能","details":"使用 Rust 构建，相比基于 JavaScript 的打包工具性能更佳"},{"icon":"🔌","title":"兼容 webpack","details":"为 webpack 用户提供熟悉的 API，使迁移变得简单"},{"icon":"🧩","title":"可扩展","details":"支持插件和加载器以扩展功能"},{"icon":"🔄","title":"监听模式","details":"文件变更时自动重新构建"}]},"headers":[],"relativePath":"zh/index.md","filePath":"zh/index.md"}'),l={name:"zh/index.md"};function e(p,s,h,k,r,c){return n(),a("div",null,s[0]||(s[0]=[t(`<h2 id="什么是-mini-rspack" tabindex="-1">什么是 mini-rspack？ <a class="header-anchor" href="#什么是-mini-rspack" aria-label="Permalink to &quot;什么是 mini-rspack？&quot;">​</a></h2><p>mini-rspack 是一个使用 Rust 和 Node.js 绑定实现的简化版 webpack 打包工具。它展示了如何使用 Rust 创建高性能的 JavaScript 打包工具。</p><h2 id="快速开始" tabindex="-1">快速开始 <a class="header-anchor" href="#快速开始" aria-label="Permalink to &quot;快速开始&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 安装</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mini-rspack</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 创建配置文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">const</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rspack</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> }</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&#39;mini-rspack&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">const</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compiler</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rspack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">options</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 运行编译器</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">compiler.run((err,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stats</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  console.log(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&#39;编译成功!&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h2 id="特性" tabindex="-1">特性 <a class="header-anchor" href="#特性" aria-label="Permalink to &quot;特性&quot;">​</a></h2><ul><li><strong>兼容 webpack 的 API</strong>：为 webpack 用户提供熟悉的接口</li><li><strong>入口点处理</strong>：支持多个入口点</li><li><strong>基本模块解析</strong>：解析模块之间的依赖关系</li><li><strong>插件系统和钩子</strong>：通过插件扩展功能</li><li><strong>加载器支持</strong>：使用加载器转换模块内容</li><li><strong>监听模式</strong>：文件变更时自动重新构建</li></ul>`,6)]))}const g=i(l,[["render",e]]);export{o as __pageData,g as default};
